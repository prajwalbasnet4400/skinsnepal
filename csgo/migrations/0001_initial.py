# Generated by Django 3.1 on 2021-09-21 16:28

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryAddon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classid', models.CharField(max_length=128)),
                ('instanceid', models.CharField(max_length=128)),
                ('assetid', models.CharField(max_length=128)),
                ('float', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('tradable', models.BooleanField(default=True)),
                ('inspect_url', models.TextField()),
                ('is_listed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('market_hash_name', models.CharField(max_length=255, unique=True)),
                ('icon_url', models.TextField(blank=True, null=True)),
                ('icon_url_large', models.TextField(blank=True, null=True)),
                ('type', models.CharField(max_length=64)),
                ('sub_type', models.CharField(blank=True, max_length=64, null=True)),
                ('weapon_type', models.CharField(blank=True, max_length=64, null=True)),
                ('exterior', models.CharField(blank=True, max_length=64, null=True)),
                ('rarity', models.CharField(blank=True, max_length=64, null=True)),
                ('rarity_color', models.CharField(blank=True, max_length=64, null=True)),
                ('stattrak', models.BooleanField(null=True)),
                ('souvenir', models.BooleanField(null=True)),
                ('tournament', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classid', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('instanceid', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('assetid', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('float', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('price', models.PositiveBigIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('tradable', models.BooleanField(default=True)),
                ('inspect_url', models.CharField(blank=True, max_length=512, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ListingAddon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csgo.item')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csgo.listing')),
            ],
        ),
        migrations.AddField(
            model_name='listing',
            name='addons',
            field=models.ManyToManyField(blank=True, related_name='addons', through='csgo.ListingAddon', to='csgo.Item'),
        ),
        migrations.AddField(
            model_name='listing',
            name='inventory',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='csgo.inventoryitem'),
        ),
        migrations.AddField(
            model_name='listing',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csgo.item'),
        ),
        migrations.AddField(
            model_name='listing',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='addons',
            field=models.ManyToManyField(blank=True, through='csgo.InventoryAddon', to='csgo.Item'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_inventory', to='csgo.item'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='inventoryaddon',
            name='addon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csgo.item'),
        ),
        migrations.AddField(
            model_name='inventoryaddon',
            name='inventory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='csgo.inventoryitem'),
        ),
        migrations.AddConstraint(
            model_name='listing',
            constraint=models.UniqueConstraint(fields=('owner', 'assetid'), name='unique_inventory_listing'),
        ),
        migrations.AddConstraint(
            model_name='inventoryitem',
            constraint=models.UniqueConstraint(fields=('assetid', 'owner'), name='unique_item'),
        ),
    ]
